barycentres.spdf <- SpatialPointsDataFrame(coords = centres.df[,c("x","y")], data = centres.df,proj4string = CRS(proj4string(eu)))
plot(barycentres.spdf,add=T)
plot(eu, add=T)
library("rgdal")
library("rgeos")
library("cartography")
setwd("/home/nlambert/Documents/ReproducibleCartography/brexit")
# import
eu <- readOGR(dsn ="input",layer = "eu")
eu@data <- eu@data[1:2]
colnames(eu@data) <- c("id","name")
# barycentre function
barycentre <- function(df, spdf,year, area){
countries <- spdf[spdf@data$id %in% area,]
buff <- gBuffer(countries,byid=FALSE, width=1)
center <- gCentroid(buff)
centres.df <- rbind(centres.df, data.frame(id=year,x=center$x,y=center$y,nb=length(area)))
file <- paste(year,".svg",sep="")
svg(paste("output",file,sep="/"))
layoutLayer(title = year, col = "black", coltitle = "white", bg = NULL,
scale = 250, frame = TRUE, north = FALSE, south = FALSE,
extent = eu)
plot(buff,add=T)
plot(center,add=T)
dev.off()
return(centres.df)
}
# data building
centres.df <- data.frame(id=character(),x=integer(),y=integer(),nb=integer())
area1957 <- c("R1","FR","BE","IT","LU","NL")
centres.df <- barycentre(centres.df, eu,1957,area1957)
area1973 <- c(area1957,"UK","IE","DK")
centres.df <- barycentre(centres.df, eu,1973,area1973)
area1981 <- c(area1973,"EL")
centres.df <- barycentre(centres.df, eu,1981,area1981)
area1986 <- c(area1981,"ES","PT")
area1990 <- c(area1986[-which(area1986=="R1")],"DE")
centres.df <- barycentre(centres.df, eu,1986,area1986)
area1995 <- c(area1990,"AT","SE","FI")
centres.df <- barycentre(centres.df, eu,1990,area1990)
area2004 <- c(area1995,"CY", "MT", "EE", "HU", "LT", "LV", "PL", "CZ", "SK", "SI")
centres.df <- barycentre(centres.df, eu,2004,area2004)
area2007 <-c(area2004,"BG","RO")
centres.df <- barycentre(centres.df, eu,2007,area2007)
area2013 <-c(area2007,"HR")
centres.df <- barycentre(centres.df, eu,2013,area2013)
area2016 <-area2013[-which(area2013=="UK")]
centres.df <- barycentre(centres.df, eu,2016,area2016)
# Plot
# plot dots
layoutLayer(title = "titre", col = "black", coltitle = "white", bg = NULL,
scale = 250, frame = TRUE, north = FALSE, south = FALSE,
extent = eu[eu@data$id %in% c("FR","DE"),])
barycentres.spdf <- SpatialPointsDataFrame(coords = centres.df[,c("x","y")], data = centres.df,proj4string = CRS(proj4string(eu)))
plot(barycentres.spdf,add=T)
plot(eu, add=T)
# plot segments
for (i in 1:length(barycentres.spdf)){
j <- i+1
segments(centres.df$x[i],centres.df$y[i],centres.df$x[j],centres.df$y[j],col='red',lwd=3)
}
library("rgdal")
library("rgeos")
library("cartography")
setwd("/home/nlambert/Documents/ReproducibleCartography/brexit")
# import
eu <- readOGR(dsn ="input",layer = "eu")
eu@data <- eu@data[1:2]
colnames(eu@data) <- c("id","name")
# barycentre function
barycentre <- function(df, spdf,year, area){
countries <- spdf[spdf@data$id %in% area,]
buff <- gBuffer(countries,byid=FALSE, width=1)
center <- gCentroid(buff)
centres.df <- rbind(centres.df, data.frame(id=year,x=center$x,y=center$y,nb=length(area)))
file <- paste(year,".svg",sep="")
svg(paste("output",file,sep="/"))
layoutLayer(title = year, col = "black", coltitle = "white", bg = NULL,
scale = 250, frame = TRUE, north = FALSE, south = FALSE,
extent = eu)
plot(buff,add=T)
plot(center,add=T)
dev.off()
return(centres.df)
}
# data building
centres.df <- data.frame(id=character(),x=integer(),y=integer(),nb=integer())
area1957 <- c("R1","FR","BE","IT","LU","NL")
centres.df <- barycentre(centres.df, eu,1957,area1957)
area1973 <- c(area1957,"UK","IE","DK")
centres.df <- barycentre(centres.df, eu,1973,area1973)
area1981 <- c(area1973,"EL")
centres.df <- barycentre(centres.df, eu,1981,area1981)
area1986 <- c(area1981,"ES","PT")
area1990 <- c(area1986[-which(area1986=="R1")],"DE")
centres.df <- barycentre(centres.df, eu,1986,area1986)
area1995 <- c(area1990,"AT","SE","FI")
centres.df <- barycentre(centres.df, eu,1990,area1990)
area2004 <- c(area1995,"CY", "MT", "EE", "HU", "LT", "LV", "PL", "CZ", "SK", "SI")
centres.df <- barycentre(centres.df, eu,2004,area2004)
area2007 <-c(area2004,"BG","RO")
centres.df <- barycentre(centres.df, eu,2007,area2007)
area2013 <-c(area2007,"HR")
centres.df <- barycentre(centres.df, eu,2013,area2013)
area2016 <-area2013[-which(area2013=="UK")]
centres.df <- barycentre(centres.df, eu,2016,area2016)
# Plot
# plot dots
layoutLayer(title = "titre", col = "black", coltitle = "white", bg = NULL,
scale = 250, frame = TRUE, north = FALSE, south = FALSE,
extent = eu[eu@data$id %in% c("FR","DE"),])
barycentres.spdf <- SpatialPointsDataFrame(coords = centres.df[,c("x","y")], data = centres.df,proj4string = CRS(proj4string(eu)))
plot(barycentres.spdf,add=T)
plot(eu, add=T)
# plot segments
for (i in 1:length(barycentres.spdf)){
j <- i+1
segments(centres.df$x[i],centres.df$y[i],centres.df$x[j],centres.df$y[j],col='red',lwd=3)
}
#------------------------------------
# Carte de France des "NUIT DEBOUT" (version2)
# cc - Nicolas Lambert, avril 2016
#------------------------------------
### [ETAPE 1] webscrapping (récupérer la liste des rassemblements sur le site https://framacarte.org/fr/map/nuit-debout_2420#2/26.0/29.0 ###
# extraction du site web
library(xml2)
library(rvest)
webpage <- read_html(x = "https://wiki.nuitdebout.fr/Villes")
# Récupération des liens
links <- webpage %>%
html_nodes("h4") %>%
html_attr("href")
//links <- paste("https://wiki.nuitdebout.fr",links,sep="")
# On parcours tous les liens un par un
Villes <- character()
for (thisLink in links) {
this_page_links <- as.vector(read_html(thisLink) %>% html_nodes(".mw-content-ltr a") %>% html_text())
Villes <- c(Villes, this_page_links)
}
# Nettoyage
x <- strsplit(Villes, "/", fixed = FALSE, perl = FALSE, useBytes = FALSE)
rassemblements <- character()
for(i in 1:length(x)){
rassemblements <- c(rassemblements, x[[i]][2])
}
rassemblements <- as.vector(na.omit(rassemblements))
rassemblements
### [ETAPE 2] géocodage ###
# Géocodage
library(photon) # devtools::install_github(repo = 'rCarto/photon')
rassemblements.geocoded <- geocode(rassemblements, limit=1, lang="fr", key="place")
# Corrections
rassemblements.geocoded[rassemblements.geocoded$location=="Orleans",] <- geocode("Orleans", limit=NULL, lang="fr", key="place")[2,]
# Nettoyage
rassemblements.geocoded <- rassemblements.geocoded[,c("location","country","lon","lat")]
# création des centroides
library("sp")
rassemblements.spdf <- SpatialPointsDataFrame(coords = rassemblements.geocoded[,c("lon","lat")], data = rassemblements.geocoded[,c("location","country")],proj4string = CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"))
### [ETAPE 3] cartographie ###
# chargement du package de cartographie
library("cartography")
data(nuts2006)
# choix de projection
library("rgdal")
lambert93 <- "+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"
countries.spdf <- spTransform(countries.spdf, CRS(lambert93))
rassemblements.spdf <- spTransform(rassemblements.spdf, CRS(lambert93))
rassemblements.spdf$id <- row.names(rassemblements.spdf)
# Fond de carte et mise en page
layoutLayer(title="La carte d'Europe des #NuitDebout",
sources = "",
author = "",
col = "black",
coltitle = "white",
bg = "#C9E2FF",
scale = NULL,
frame = FALSE,
extent=countries.spdf)
plot(countries.spdf,col="#CCCCCC", border="white",lwd="1.5", add=T)
# Liens
library(rgeos)
library(reshape2)
mydist1 <- 50000
mydist2 <- 100000
mydist3 <- 150000
dist<-gDistance(rassemblements.spdf,byid=TRUE)
dist<-melt(dist,variable.name=1, na.rm=TRUE)
colnames(dist) <- c("i","j","fij")
dist <- dist[dist$fij <=mydist1,]
links <- getLinkLayer(spdf=rassemblements.spdf, df=dist,spdfid="id")
plot(links,col="blue",add=T)
dist<-gDistance(rassemblements.spdf,byid=TRUE)
dist<-melt(dist,variable.name=1, na.rm=TRUE)
colnames(dist) <- c("i","j","fij")
dist <- dist[dist$fij > mydist1,]
dist <- dist[dist$fij <=mydist2,]
links <- getLinkLayer(spdf=rassemblements.spdf, df=dist,spdfid="id")
plot(links,col="red",add=T)
dist<-gDistance(rassemblements.spdf,byid=TRUE)
dist<-melt(dist,variable.name=1, na.rm=TRUE)
colnames(dist) <- c("i","j","fij")
dist <- dist[dist$fij > mydist2,]
dist <- dist[dist$fij <= mydist3,]
links <- getLinkLayer(spdf=rassemblements.spdf, df=dist,spdfid="id")
plot(links,col="green",add=T)
# lieux
rassemblements.spdf$sizes <- 0.1
propSymbolsLayer(spdf = rassemblements.spdf, df = rassemblements.spdf@data,
var = "sizes",
symbols = "circle",
col =  "#920000",
legend.pos = "n",
inches = 0.01,
add=T)
# ....... Il reste à finaliser la carte dans un logiciel de DAO
library("rgdal")
library("rgeos")
library("cartography")
setwd("/home/nlambert/Documents/ReproducibleCartography/brexit")
# import
eu <- readOGR(dsn ="input",layer = "eu")
eu@data <- eu@data[1:2]
colnames(eu@data) <- c("id","name")
# barycentre function
barycentre <- function(df, spdf,year, area){
countries <- spdf[spdf@data$id %in% area,]
buff <- gBuffer(countries,byid=FALSE, width=1)
center <- gCentroid(buff)
centres.df <- rbind(centres.df, data.frame(id=year,x=center$x,y=center$y,nb=length(area)))
file <- paste(year,".svg",sep="")
svg(paste("output",file,sep="/"))
layoutLayer(title = year, col = "black", coltitle = "white", bg = NULL,
scale = 250, frame = TRUE, north = FALSE, south = FALSE,
extent = eu)
plot(buff,add=T)
plot(center,add=T)
dev.off()
return(centres.df)
}
# data building
centres.df <- data.frame(id=character(),x=integer(),y=integer(),nb=integer())
area1957 <- c("R1","FR","BE","IT","LU","NL")
centres.df <- barycentre(centres.df, eu,1957,area1957)
area1973 <- c(area1957,"UK","IE","DK")
centres.df <- barycentre(centres.df, eu,1973,area1973)
area1981 <- c(area1973,"EL")
centres.df <- barycentre(centres.df, eu,1981,area1981)
area1986 <- c(area1981,"ES","PT")
area1990 <- c(area1986[-which(area1986=="R1")],"DE")
centres.df <- barycentre(centres.df, eu,1986,area1986)
area1995 <- c(area1990,"AT","SE","FI")
centres.df <- barycentre(centres.df, eu,1990,area1990)
area2004 <- c(area1995,"CY", "MT", "EE", "HU", "LT", "LV", "PL", "CZ", "SK", "SI")
centres.df <- barycentre(centres.df, eu,2004,area2004)
area2007 <-c(area2004,"BG","RO")
centres.df <- barycentre(centres.df, eu,2007,area2007)
area2013 <-c(area2007,"HR")
centres.df <- barycentre(centres.df, eu,2013,area2013)
area2016 <-area2013[-which(area2013=="UK")]
centres.df <- barycentre(centres.df, eu,2016,area2016)
# Plot
# plot dots
layoutLayer(title = "titre", col = "black", coltitle = "white", bg = NULL,
scale = 250, frame = TRUE, north = FALSE, south = FALSE,
extent = eu[eu@data$id %in% c("FR","DE"),])
barycentres.spdf <- SpatialPointsDataFrame(coords = centres.df[,c("x","y")], data = centres.df,proj4string = CRS(proj4string(eu)))
plot(barycentres.spdf,add=T)
plot(eu, add=T)
# plot segments
for (i in 1:length(barycentres.spdf)){
j <- i+1
segments(centres.df$x[i],centres.df$y[i],centres.df$x[j],centres.df$y[j],col='red',lwd=3)
}
library("rgdal")
library("rgeos")
library("cartography")
setwd("/home/nlambert/Documents/ReproducibleCartography/brexit")
# import
eu <- readOGR(dsn ="input",layer = "eu")
eu@data <- eu@data[1:2]
colnames(eu@data) <- c("id","name")
# barycentre function
barycentre <- function(df, spdf,year, area){
countries <- spdf[spdf@data$id %in% area,]
buff <- gBuffer(countries,byid=FALSE, width=1)
center <- gCentroid(buff)
centres.df <- rbind(centres.df, data.frame(id=year,x=center$x,y=center$y,nb=length(area)))
file <- paste(year,".svg",sep="")
svg(paste("output",file,sep="/"))
layoutLayer(title = year, col = "black", coltitle = "white", bg = NULL,
scale = 250, frame = TRUE, north = FALSE, south = FALSE,
extent = eu)
plot(buff,add=T)
plot(center,add=T)
dev.off()
return(centres.df)
}
# data building
centres.df <- data.frame(id=character(),x=integer(),y=integer(),nb=integer())
area1957 <- c("R1","FR","BE","IT","LU","NL")
centres.df <- barycentre(centres.df, eu,1957,area1957)
area1973 <- c(area1957,"UK","IE","DK")
centres.df <- barycentre(centres.df, eu,1973,area1973)
area1981 <- c(area1973,"EL")
centres.df <- barycentre(centres.df, eu,1981,area1981)
area1986 <- c(area1981,"ES","PT")
area1990 <- c(area1986[-which(area1986=="R1")],"DE")
centres.df <- barycentre(centres.df, eu,1986,area1986)
area1995 <- c(area1990,"AT","SE","FI")
centres.df <- barycentre(centres.df, eu,1990,area1990)
area2004 <- c(area1995,"CY", "MT", "EE", "HU", "LT", "LV", "PL", "CZ", "SK", "SI")
centres.df <- barycentre(centres.df, eu,2004,area2004)
area2007 <-c(area2004,"BG","RO")
centres.df <- barycentre(centres.df, eu,2007,area2007)
area2013 <-c(area2007,"HR")
centres.df <- barycentre(centres.df, eu,2013,area2013)
area2016 <-area2013[-which(area2013=="UK")]
centres.df <- barycentre(centres.df, eu,2016,area2016)
# Plot
# plot dots
layoutLayer(title = "titre", col = "black", coltitle = "white", bg = NULL,
scale = 250, frame = TRUE, north = FALSE, south = FALSE,
extent = eu[eu@data$id %in% c("FR","DE"),])
barycentres.spdf <- SpatialPointsDataFrame(coords = centres.df[,c("x","y")], data = centres.df,proj4string = CRS(proj4string(eu)))
plot(barycentres.spdf,add=T)
plot(eu, add=T)
# plot segments
for (i in 1:length(barycentres.spdf)){
j <- i+1
segments(centres.df$x[i],centres.df$y[i],centres.df$x[j],centres.df$y[j],col='red',lwd=3)
}
svg("output/trajectoire.svg")
library("rgdal")
library("rgeos")
library("cartography")
setwd("/home/nlambert/Documents/ReproducibleCartography/brexit")
# import
eu <- readOGR(dsn ="input",layer = "eu")
eu@data <- eu@data[1:2]
colnames(eu@data) <- c("id","name")
# barycentre function
barycentre <- function(df, spdf,year, area){
countries <- spdf[spdf@data$id %in% area,]
buff <- gBuffer(countries,byid=FALSE, width=1)
center <- gCentroid(buff)
centres.df <- rbind(centres.df, data.frame(id=year,x=center$x,y=center$y,nb=length(area)))
file <- paste(year,".svg",sep="")
svg(paste("output",file,sep="/"))
layoutLayer(title = year, col = "black", coltitle = "white", bg = NULL,
scale = 250, frame = TRUE, north = FALSE, south = FALSE,
extent = eu)
plot(buff,add=T)
plot(center,add=T)
dev.off()
return(centres.df)
}
# data building
centres.df <- data.frame(id=character(),x=integer(),y=integer(),nb=integer())
area1957 <- c("R1","FR","BE","IT","LU","NL")
centres.df <- barycentre(centres.df, eu,1957,area1957)
area1973 <- c(area1957,"UK","IE","DK")
centres.df <- barycentre(centres.df, eu,1973,area1973)
area1981 <- c(area1973,"EL")
centres.df <- barycentre(centres.df, eu,1981,area1981)
area1986 <- c(area1981,"ES","PT")
area1990 <- c(area1986[-which(area1986=="R1")],"DE")
centres.df <- barycentre(centres.df, eu,1986,area1986)
area1995 <- c(area1990,"AT","SE","FI")
centres.df <- barycentre(centres.df, eu,1990,area1990)
area2004 <- c(area1995,"CY", "MT", "EE", "HU", "LT", "LV", "PL", "CZ", "SK", "SI")
centres.df <- barycentre(centres.df, eu,2004,area2004)
area2007 <-c(area2004,"BG","RO")
centres.df <- barycentre(centres.df, eu,2007,area2007)
area2013 <-c(area2007,"HR")
centres.df <- barycentre(centres.df, eu,2013,area2013)
area2016 <-area2013[-which(area2013=="UK")]
centres.df <- barycentre(centres.df, eu,2016,area2016)
# Plot
svg("output/trajectoire.svg")
# plot dots
layoutLayer(title = "titre", col = "black", coltitle = "white", bg = NULL,
scale = 250, frame = TRUE, north = FALSE, south = FALSE,
extent = eu[eu@data$id %in% c("FR","DE"),])
barycentres.spdf <- SpatialPointsDataFrame(coords = centres.df[,c("x","y")], data = centres.df,proj4string = CRS(proj4string(eu)))
plot(barycentres.spdf,add=T)
plot(eu, add=T)
# plot segments
for (i in 1:length(barycentres.spdf)){
j <- i+1
segments(centres.df$x[i],centres.df$y[i],centres.df$x[j],centres.df$y[j],col='red',lwd=3)
}
dev.off()
library("rgdal")
library("rgeos")
library("cartography")
setwd("/home/nlambert/Documents/ReproducibleCartography/brexit")
# import
eu <- readOGR(dsn ="input",layer = "eu")
eu@data <- eu@data[1:2]
colnames(eu@data) <- c("id","name")
# barycentre function
barycentre <- function(df, spdf,year, area){
countries <- spdf[spdf@data$id %in% area,]
buff <- gBuffer(countries,byid=FALSE, width=1)
center <- gCentroid(buff)
centres.df <- rbind(centres.df, data.frame(id=year,x=center$x,y=center$y,nb=length(area)))
file <- paste(year,".svg",sep="")
svg(paste("output",file,sep="/"))
layoutLayer(title = year, col = "black", coltitle = "white", bg = NULL,
scale = 250, frame = TRUE, north = FALSE, south = FALSE,
extent = eu)
plot(buff,add=T)
plot(center,add=T)
dev.off()
return(centres.df)
}
# data building
centres.df <- data.frame(id=character(),x=integer(),y=integer(),nb=integer())
area1957 <- c("R1","FR","BE","IT","LU","NL")
centres.df <- barycentre(centres.df, eu,1957,area1957)
area1973 <- c(area1957,"UK","IE","DK")
centres.df <- barycentre(centres.df, eu,1973,area1973)
area1981 <- c(area1973,"EL")
centres.df <- barycentre(centres.df, eu,1981,area1981)
area1986 <- c(area1981,"ES","PT")
area1990 <- c(area1986[-which(area1986=="R1")],"DE")
centres.df <- barycentre(centres.df, eu,1986,area1986)
area1995 <- c(area1990,"AT","SE","FI")
centres.df <- barycentre(centres.df, eu,1990,area1990)
area2004 <- c(area1995,"CY", "MT", "EE", "HU", "LT", "LV", "PL", "CZ", "SK", "SI")
centres.df <- barycentre(centres.df, eu,2004,area2004)
area2007 <-c(area2004,"BG","RO")
centres.df <- barycentre(centres.df, eu,2007,area2007)
area2013 <-c(area2007,"HR")
centres.df <- barycentre(centres.df, eu,2013,area2013)
area2016 <-area2013[-which(area2013=="UK")]
centres.df <- barycentre(centres.df, eu,2016,area2016)
# Plot
pdf("output/trajectoire.pdf")
# plot dots
layoutLayer(title = "titre", col = "black", coltitle = "white", bg = NULL,
scale = 250, frame = TRUE, north = FALSE, south = FALSE,
extent = eu[eu@data$id %in% c("FR","DE"),])
barycentres.spdf <- SpatialPointsDataFrame(coords = centres.df[,c("x","y")], data = centres.df,proj4string = CRS(proj4string(eu)))
plot(barycentres.spdf,add=T)
plot(eu, add=T)
# plot segments
for (i in 1:length(barycentres.spdf)){
j <- i+1
segments(centres.df$x[i],centres.df$y[i],centres.df$x[j],centres.df$y[j],col='red',lwd=3)
}
dev.off()
library("rgdal")
library("rgeos")
library("cartography")
setwd("/home/nlambert/Documents/ReproducibleCartography/brexit")
# import
eu <- readOGR(dsn ="input",layer = "eu")
eu@data <- eu@data[1:2]
colnames(eu@data) <- c("id","name")
# barycentre function
barycentre <- function(df, spdf,year, area){
countries <- spdf[spdf@data$id %in% area,]
buff <- gBuffer(countries,byid=FALSE, width=1)
center <- gCentroid(buff)
centres.df <- rbind(centres.df, data.frame(id=year,x=center$x,y=center$y,nb=length(area)))
file <- paste(year,".pdf",sep="")
pdf(paste("output",file,sep="/"))
layoutLayer(title = year, col = "black", coltitle = "white", bg = NULL,
scale = 250, frame = TRUE, north = FALSE, south = FALSE,
extent = eu)
plot(buff,add=T)
plot(center,add=T)
dev.off()
return(centres.df)
}
# data building
centres.df <- data.frame(id=character(),x=integer(),y=integer(),nb=integer())
area1957 <- c("R1","FR","BE","IT","LU","NL")
centres.df <- barycentre(centres.df, eu,1957,area1957)
area1973 <- c(area1957,"UK","IE","DK")
centres.df <- barycentre(centres.df, eu,1973,area1973)
area1981 <- c(area1973,"EL")
centres.df <- barycentre(centres.df, eu,1981,area1981)
area1986 <- c(area1981,"ES","PT")
area1990 <- c(area1986[-which(area1986=="R1")],"DE")
centres.df <- barycentre(centres.df, eu,1986,area1986)
area1995 <- c(area1990,"AT","SE","FI")
centres.df <- barycentre(centres.df, eu,1990,area1990)
area2004 <- c(area1995,"CY", "MT", "EE", "HU", "LT", "LV", "PL", "CZ", "SK", "SI")
centres.df <- barycentre(centres.df, eu,2004,area2004)
area2007 <-c(area2004,"BG","RO")
centres.df <- barycentre(centres.df, eu,2007,area2007)
area2013 <-c(area2007,"HR")
centres.df <- barycentre(centres.df, eu,2013,area2013)
area2016 <-area2013[-which(area2013=="UK")]
centres.df <- barycentre(centres.df, eu,2016,area2016)
# Plot
pdf("output/trajectoire.pdf")
# plot dots
layoutLayer(title = "titre", col = "black", coltitle = "white", bg = NULL,
scale = 250, frame = TRUE, north = FALSE, south = FALSE,
extent = eu[eu@data$id %in% c("FR","DE"),])
barycentres.spdf <- SpatialPointsDataFrame(coords = centres.df[,c("x","y")], data = centres.df,proj4string = CRS(proj4string(eu)))
plot(barycentres.spdf,add=T)
plot(eu, add=T)
# plot segments
for (i in 1:length(barycentres.spdf)){
j <- i+1
segments(centres.df$x[i],centres.df$y[i],centres.df$x[j],centres.df$y[j],col='red',lwd=3)
}
dev.off()
